//
//  RouteView.swift
//  GPXApp
//
//  Created by Spencer Addis on 4/5/25.
//

import MapKit
import SwiftUI
import Combine

struct RouteDetailView: View {
    let route: RunRoute
    @State private var liked: Bool = false
    
    // Create a dummy region for demonstration.
    // In a real app, you might calculate this region based on the routeâ€™s coordinates.
    @State private var region = MKCoordinateRegion(
        center: CLLocationCoordinate2D(latitude: 38.9717, longitude: -95.2353),
        span: MKCoordinateSpan(latitudeDelta: 0.05, longitudeDelta: 0.05)
    )
    
    var body: some View {
        ScrollView {
            VStack(alignment: .leading, spacing: 16) {
                // Route Name
                Text(route.routeName)
                    .font(.largeTitle)
                    .fontWeight(.bold)
                
                // Who generated the route (dummy value for now)
                Text("Generated by: John Doe")
                    .font(.subheadline)
                    .foregroundColor(.secondary)
                
                // Distance
                Text("Distance: \(route.distance, specifier: "%.1f") km")
                    .font(.headline)
                
                // Map displaying the route
//                Map(coordinateRegion: $region)
//                    .frame(height: 300)
//                    .cornerRadius(10)
//                    .padding(.vertical)
                
                // Liked / Not Liked Button
                Button(action: {
                    liked.toggle()
                }) {
                    HStack {
                        Image(systemName: liked ? "heart.fill" : "heart")
                            .foregroundColor(liked ? .red : .gray)
                        Text(liked ? "Liked" : "Not Liked")
                    }
                    .padding()
                    .background(Color(UIColor.secondarySystemBackground))
                    .cornerRadius(8)
                }
                
                // Download GPX Route Button
                Button(action: {
                    // Add your download logic here.
                    print("Download GPX file for \(route.routeName)")
                }) {
                    HStack {
                        Image(systemName: "square.and.arrow.down")
                        Text("Download Route (GPX)")
                    }
                    .padding()
                    .frame(maxWidth: .infinity)
                    .background(Color.blue)
                    .foregroundColor(.white)
                    .cornerRadius(10)
                }
                
                Spacer()
            }
            .padding()
        }
        .navigationTitle("Route Details")
        .navigationBarTitleDisplayMode(.inline)
    }
}
